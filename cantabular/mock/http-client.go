// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package cantabular

import (
	"context"
	"net/http"
	"sync"
)

// httpClientMock is a mock implementation of httpClient.
//
// 	func TestSomethingThatUseshttpClient(t *testing.T) {
//
// 		// make and configure a mocked httpClient
// 		mockedhttpClient := &httpClientMock{
// 			GetFunc: func(ctx context.Context, url string) (*http.Response, error) {
// 				panic("mock out the Get method")
// 			},
// 		}
//
// 		// use mockedhttpClient in code that requires httpClient
// 		// and then make assertions.
//
// 	}
type httpClientMock struct {
	// GetFunc mocks the Get method.
	GetFunc func(ctx context.Context, url string) (*http.Response, error)

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// URL is the url argument value.
			URL string
		}
	}
	lockGet sync.RWMutex
}

// Get calls GetFunc.
func (mock *httpClientMock) Get(ctx context.Context, url string) (*http.Response, error) {
	if mock.GetFunc == nil {
		panic("httpClientMock.GetFunc: method is nil but httpClient.Get was just called")
	}
	callInfo := struct {
		Ctx context.Context
		URL string
	}{
		Ctx: ctx,
		URL: url,
	}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	return mock.GetFunc(ctx, url)
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//     len(mockedhttpClient.GetCalls())
func (mock *httpClientMock) GetCalls() []struct {
	Ctx context.Context
	URL string
} {
	var calls []struct {
		Ctx context.Context
		URL string
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}
