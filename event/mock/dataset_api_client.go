// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"github.com/ONSdigital/dp-api-clients-go/dataset"
	"github.com/ONSdigital/dp-import-cantabular-dataset/event"
	"sync"
)

// Ensure, that DatasetAPIClientMock does implement event.DatasetAPIClient.
// If this is not the case, regenerate this file with moq.
var _ event.DatasetAPIClient = &DatasetAPIClientMock{}

// DatasetAPIClientMock is a mock implementation of event.DatasetAPIClient.
//
// 	func TestSomethingThatUsesDatasetAPIClient(t *testing.T) {
//
// 		// make and configure a mocked event.DatasetAPIClient
// 		mockedDatasetAPIClient := &DatasetAPIClientMock{
// 			PutInstanceStateFunc: func(ctx context.Context, serviceAuthToken string, instanceID string, state dataset.State, ifMatch string) (string, error) {
// 				panic("mock out the PutInstanceState method")
// 			},
// 		}
//
// 		// use mockedDatasetAPIClient in code that requires event.DatasetAPIClient
// 		// and then make assertions.
//
// 	}
type DatasetAPIClientMock struct {
	// PutInstanceStateFunc mocks the PutInstanceState method.
	PutInstanceStateFunc func(ctx context.Context, serviceAuthToken string, instanceID string, state dataset.State, ifMatch string) (string, error)

	// calls tracks calls to the methods.
	calls struct {
		// PutInstanceState holds details about calls to the PutInstanceState method.
		PutInstanceState []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ServiceAuthToken is the serviceAuthToken argument value.
			ServiceAuthToken string
			// InstanceID is the instanceID argument value.
			InstanceID string
			// State is the state argument value.
			State dataset.State
			// IfMatch is the ifMatch argument value.
			IfMatch string
		}
	}
	lockPutInstanceState sync.RWMutex
}

// PutInstanceState calls PutInstanceStateFunc.
func (mock *DatasetAPIClientMock) PutInstanceState(ctx context.Context, serviceAuthToken string, instanceID string, state dataset.State, ifMatch string) (string, error) {
	if mock.PutInstanceStateFunc == nil {
		panic("DatasetAPIClientMock.PutInstanceStateFunc: method is nil but DatasetAPIClient.PutInstanceState was just called")
	}
	callInfo := struct {
		Ctx              context.Context
		ServiceAuthToken string
		InstanceID       string
		State            dataset.State
		IfMatch          string
	}{
		Ctx:              ctx,
		ServiceAuthToken: serviceAuthToken,
		InstanceID:       instanceID,
		State:            state,
		IfMatch:          ifMatch,
	}
	mock.lockPutInstanceState.Lock()
	mock.calls.PutInstanceState = append(mock.calls.PutInstanceState, callInfo)
	mock.lockPutInstanceState.Unlock()
	return mock.PutInstanceStateFunc(ctx, serviceAuthToken, instanceID, state, ifMatch)
}

// PutInstanceStateCalls gets all the calls that were made to PutInstanceState.
// Check the length with:
//     len(mockedDatasetAPIClient.PutInstanceStateCalls())
func (mock *DatasetAPIClientMock) PutInstanceStateCalls() []struct {
	Ctx              context.Context
	ServiceAuthToken string
	InstanceID       string
	State            dataset.State
	IfMatch          string
} {
	var calls []struct {
		Ctx              context.Context
		ServiceAuthToken string
		InstanceID       string
		State            dataset.State
		IfMatch          string
	}
	mock.lockPutInstanceState.RLock()
	calls = mock.calls.PutInstanceState
	mock.lockPutInstanceState.RUnlock()
	return calls
}
